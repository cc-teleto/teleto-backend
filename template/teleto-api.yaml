---
swagger: "2.0"
info:
  version: "2020-11-24T08:09:53Z"
  title: "teleto API"
basePath:
  Fn::Sub: ${ApiStage}
schemes:
- "https"
paths:
  /members:
    get:
      produces:
      - "application/json"
      - "application/json(全取得)"
      parameters:
      - name: "grouphash"
        in: "query"
        required: false
        type: "string"
      - name: "random"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/getAllMembers"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetMembersLambda.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  #   post:
  #     produces:
  #     - "application/json"
  #     parameters:
  #     - name: "grouphash"
  #       in: "query"
  #       required: false
  #       type: "string"
  #     responses:
  #       201:
  #         description: "201 response"
  #         schema:
  #           $ref: "#/definitions/postMembers"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #       401:
  #         description: "401 response"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #       402:
  #         description: "402 response"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #     x-amazon-apigateway-integration:
  #       uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostMembersLambda.Arn}/invocations"
  #       responses:
  #         default:
  #           statusCode: "200"
  #           responseParameters:
  #             method.response.header.Access-Control-Allow-Origin: "'*'"
  #       passthroughBehavior: "when_no_match"
  #       httpMethod: "POST"
  #       contentHandling: "CONVERT_TO_TEXT"
  #       type: "aws_proxy"
  #   delete:
  #     produces:
  #     - "application/json"
  #     parameters:
  #     - name: "memberhash"
  #       in: "query"
  #       required: false
  #       type: "string"
  #     - name: "grouphash"
  #       in: "query"
  #       required: false
  #       type: "string"
  #     responses:
  #       200:
  #         description: "200 response"
  #         schema:
  #           $ref: "#/definitions/deleteMember"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #           Access-Control-Allow-Methods:
  #             type: "string"
  #       402:
  #         description: "402 response"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #     x-amazon-apigateway-integration:
  #       uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteMemberLambda.Arn}/invocations"
  #       responses:
  #         default:
  #           statusCode: "200"
  #       passthroughBehavior: "when_no_match"
  #       httpMethod: "POST"
  #       contentHandling: "CONVERT_TO_TEXT"
  #       type: "aws_proxy"
  #   options:
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     responses:
  #       200:
  #         description: "200 response"
  #         schema:
  #           $ref: "#/definitions/Empty"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #           Access-Control-Allow-Methods:
  #             type: "string"
  #           Access-Control-Allow-Headers:
  #             type: "string"
  #     x-amazon-apigateway-integration:
  #       responses:
  #         default:
  #           statusCode: "200"
  #           responseParameters:
  #             method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST,DELETE'"
  #             method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  #             method.response.header.Access-Control-Allow-Origin: "'*'"
  #       requestTemplates:
  #         application/json: "{\"statusCode\": 200}"
  #       passthroughBehavior: "when_no_match"
  #       type: "mock"
  # /topics:
  #   get:
  #     produces:
  #     - "application/json"
  #     parameters:
  #     - name: "grouphash"
  #       in: "query"
  #       required: false
  #       type: "string"
  #     - name: "random"
  #       in: "query"
  #       required: false
  #       type: "string"
  #     responses:
  #       200:
  #         description: "200 response"
  #         schema:
  #           $ref: "#/definitions/getTopics"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #     x-amazon-apigateway-integration:
  #       uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTopicsLambda.Arn}/invocations"
  #       responses:
  #         default:
  #           statusCode: "200"
  #           responseParameters:
  #             method.response.header.Access-Control-Allow-Origin: "'*'"
  #       passthroughBehavior: "when_no_match"
  #       httpMethod: "POST"
  #       contentHandling: "CONVERT_TO_TEXT"
  #       type: "aws_proxy"
  #   options:
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     responses:
  #       200:
  #         description: "200 response"
  #         schema:
  #           $ref: "#/definitions/Empty"
  #         headers:
  #           Access-Control-Allow-Origin:
  #             type: "string"
  #           Access-Control-Allow-Methods:
  #             type: "string"
  #           Access-Control-Allow-Headers:
  #             type: "string"
  #     x-amazon-apigateway-integration:
  #       responses:
  #         default:
  #           statusCode: "200"
  #           responseParameters:
  #             method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
  #             method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  #             method.response.header.Access-Control-Allow-Origin: "'*'"
  #       requestTemplates:
  #         application/json: "{\"statusCode\": 200}"
  #       passthroughBehavior: "when_no_match"
  #       type: "mock"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
  getTopics:
    type: "object"
    properties:
      value:
        type: "string"
    title: "getTopicsModel"
  getAllMembers:
    type: "object"
    properties:
      members:
        type: "array"
        items:
          type: "object"
          properties:
            grouphash:
              type: "string"
            memberhash:
              type: "string"
            membername:
              type: "string"
    title: "getAllMembersModel"
  deleteMember:
    type: "object"
    properties:
      memberhash:
        type: "string"
    title: "grouphashModel"
  postMembers:
    type: "object"
    properties:
      grouphash:
        type: "string"
    title: "postMembersModel"
  getMembers:
    type: "object"
    properties:
      value:
        type: "string"
    title: "getMembersModel"
